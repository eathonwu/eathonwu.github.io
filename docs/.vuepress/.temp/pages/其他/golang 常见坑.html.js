import comp from "/Users/yangyang/docs/docs/.vuepress/.temp/pages/其他/golang 常见坑.html.vue"
const data = JSON.parse("{\"path\":\"/%E5%85%B6%E4%BB%96/golang%20%E5%B8%B8%E8%A7%81%E5%9D%91.html\",\"title\":\"golang常见坑\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"golang常见坑\",\"description\":\"2024 -11- 17 https://geektutu.com/post/hpg-string-concat.html 题目汇总 参考 : https://zhuanlan.zhihu.com/p/471490292 golang 什么是协程（Goroutine） ​ 协程是用户态轻量级线程，它是线程调度的基本单位。通常在函数前加上go关键字就能实...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/%E5%85%B6%E4%BB%96/golang%20%E5%B8%B8%E8%A7%81%E5%9D%91.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"ntom\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"golang常见坑\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"2024 -11- 17 https://geektutu.com/post/hpg-string-concat.html 题目汇总 参考 : https://zhuanlan.zhihu.com/p/471490292 golang 什么是协程（Goroutine） ​ 协程是用户态轻量级线程，它是线程调度的基本单位。通常在函数前加上go关键字就能实...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://img2023.cnblogs.com/blog/3182848/202308/3182848-20230821211328513-1788770159.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2024-12-23T14:28:54.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2024-12-23T14:28:54.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"golang常见坑\\\",\\\"image\\\":[\\\"https://img2023.cnblogs.com/blog/3182848/202308/3182848-20230821211328513-1788770159.png\\\",\\\"https://pic3.zhimg.com/v2-b770e5632874d40780ecfe79701324f2_1440w.jpg\\\"],\\\"dateModified\\\":\\\"2024-12-23T14:28:54.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"notm\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"什么是协程（Goroutine）\",\"slug\":\"什么是协程-goroutine\",\"link\":\"#什么是协程-goroutine\",\"children\":[{\"level\":3,\"title\":\"线程创建方式\",\"slug\":\"线程创建方式\",\"link\":\"#线程创建方式\",\"children\":[]}]},{\"level\":2,\"title\":\"性能排查\",\"slug\":\"性能排查\",\"link\":\"#性能排查\",\"children\":[]},{\"level\":2,\"title\":\"如何高效地拼接字符串\",\"slug\":\"如何高效地拼接字符串\",\"link\":\"#如何高效地拼接字符串\",\"children\":[]},{\"level\":2,\"title\":\"数组和切片区别\",\"slug\":\"数组和切片区别\",\"link\":\"#数组和切片区别\",\"children\":[]},{\"level\":2,\"title\":\"切片常见操作\",\"slug\":\"切片常见操作\",\"link\":\"#切片常见操作\",\"children\":[]},{\"level\":2,\"title\":\"Go 支持默认参数或可选参数吗\",\"slug\":\"go-支持默认参数或可选参数吗\",\"link\":\"#go-支持默认参数或可选参数吗\",\"children\":[]},{\"level\":2,\"title\":\"？\",\"slug\":\"\",\"link\":\"#\",\"children\":[]},{\"level\":2,\"title\":\"别名\",\"slug\":\"别名\",\"link\":\"#别名\",\"children\":[{\"level\":3,\"title\":\"结构体打印时，%v 和 %+v 的区别\",\"slug\":\"结构体打印时-v-和-v-的区别\",\"link\":\"#结构体打印时-v-和-v-的区别\",\"children\":[]}]},{\"level\":2,\"title\":\"iota\",\"slug\":\"iota\",\"link\":\"#iota\",\"children\":[{\"level\":3,\"title\":\"如何知道一个对象是分配在栈上还是堆上？\",\"slug\":\"如何知道一个对象是分配在栈上还是堆上\",\"link\":\"#如何知道一个对象是分配在栈上还是堆上\",\"children\":[]},{\"level\":3,\"title\":\"2 个 nil 可能不相等吗？\",\"slug\":\"_2-个-nil-可能不相等吗\",\"link\":\"#_2-个-nil-可能不相等吗\",\"children\":[]},{\"level\":3,\"title\":\"GOlang GC\",\"slug\":\"golang-gc\",\"link\":\"#golang-gc\",\"children\":[]},{\"level\":3,\"title\":\"非接口的任意类型 T() 都能够调用 *T 的方法吗？反过来呢？\",\"slug\":\"非接口的任意类型-t-都能够调用-t-的方法吗-反过来呢\",\"link\":\"#非接口的任意类型-t-都能够调用-t-的方法吗-反过来呢\",\"children\":[]},{\"level\":3,\"title\":\"08 go slice是怎么扩容的？\",\"slug\":\"_08-go-slice是怎么扩容的\",\"link\":\"#_08-go-slice是怎么扩容的\",\"children\":[]},{\"level\":3,\"title\":\"❤无缓冲的 channel 和有缓冲的 channel 的区别？\",\"slug\":\"❤无缓冲的-channel-和有缓冲的-channel-的区别\",\"link\":\"#❤无缓冲的-channel-和有缓冲的-channel-的区别\",\"children\":[]},{\"level\":3,\"title\":\"为什么有协程泄露(Goroutine Leak)？\",\"slug\":\"为什么有协程泄露-goroutine-leak\",\"link\":\"#为什么有协程泄露-goroutine-leak\",\"children\":[]},{\"level\":3,\"title\":\"Go 可以限制运行时操作系统线程的数量吗？ 常见的goroutine操作函数有哪些？\",\"slug\":\"go-可以限制运行时操作系统线程的数量吗-常见的goroutine操作函数有哪些\",\"link\":\"#go-可以限制运行时操作系统线程的数量吗-常见的goroutine操作函数有哪些\",\"children\":[]}]}],\"git\":{\"createdTime\":1734964134000,\"updatedTime\":1734964134000,\"contributors\":[{\"name\":\"Yang Yang\",\"username\":\"Yang Yang\",\"email\":\"yangyang@YangdeMacBook-Air.local\",\"commits\":1,\"url\":\"https://github.com/Yang Yang\"}]},\"readingTime\":{\"minutes\":6.57,\"words\":1972},\"filePathRelative\":\"其他/golang 常见坑.md\",\"localizedDate\":\"2024年12月23日\",\"autoDesc\":true}")
export { comp, data }
